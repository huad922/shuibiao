C251 COMPILER V5.04b,  Calculate                                                           25/08/18  14:15:50  PAGE 1   


C251 COMPILER V5.04b, COMPILATION OF MODULE Calculate
OBJECT MODULE PLACED IN Calculate.obj
COMPILER INVOKED BY: d:\Keil\C251\BIN\C251.EXE SRC\Calculate.c XSMALL BROWSE DEBUG PRINT(.\Calculate.lst) OBJECT(Calcula
                    -te.obj) 

stmt  level    source

    1          #include "Flash.h"
    2          #include "Calculate.h"
    3          #include "LCD.h"
    4          //===============================================
    5          //宏定义
    6          //===============================================
    7          #define RNGTESTTIMES           (5)
    8          #define RNGCTRLPWRON           (0x01)
    9          #define RNGCTRLRUN             (0x02)
   10          
   11          #define RNGMODECNTOFFSERT      (2)
   12          #define RNGMODEFDBKOFFSERT     (1)
   13          #define RNGMODELOADOFFSERT     (0)
   14          #define RNGMODECNT0            (0)
   15          #define RNGMODECNT8            (1)
   16          #define RNGMODECNT16           (2)
   17          #define RNGMODECNT32           (3)
   18          #define RNGMODECNT64           (4)
   19          #define RNGMODECNT128          (5)
   20          #define RNGMODECNT256          (6)
   21          #define RNGMODEXORON           (1)
   22          #define RNGMODEXOROFF          (0)
   23          #define RNGMODELOADNEW             (1)
   24          #define RNGMODELOADOLD             (0)
   25          /*******************************************************************************
   26          * 函  数  名      : InitData
   27          * 描      述      : 数据初始化
   28          * 输      入      : 无.
   29          * 返      回      : 无.
   30          *******************************************************************************/
   31          void InitData(void)    
   32          {
   33   1        consumed_water=(unsigned long)g_write_value[9]*65536+(unsigned long)g_write_value[8]*256+(unsigned long
             -)g_write_value[7];
   34   1        showIP=0;
   35   1      }
   36          /*******************************************************************************
   37          * 函  数  名      : FCtrol
   38          * 描      述      : 阀门控制函数
   39          * 输      入      : 0 开阀 1 关阀
   40          * 返      回      : 无.
   41          *******************************************************************************/
   42          void FCtrol(unsigned char order) 
   43          {
   44   1        P1 |=(BIT5+BIT0);//开启驱动部分
   45   1        Delay(5);
   46   1        P1_DIR |=(BIT3+BIT4);//输入监测
   47   1        FDtime=9;
   48   1        LCD_Clear(0X00);
   49   1        switch(order)
   50   1        {
   51   2          case 0:                         
   52   2            if((FOflag==0) && (FCflag==0))
   53   2            {
   54   3              while(FDtime>0)
   55   3              { 
   56   4                FOpen; 
   57   4                ShowOpen(FDtime);             
C251 COMPILER V5.04b,  Calculate                                                           25/08/18  14:15:50  PAGE 2   

   58   4              }
   59   3            }
   60   2            else
   61   2            {
   62   3              while((FOflag) && (FDtime>0))
   63   3              { 
   64   4                FOpen; 
   65   4                ShowOpen(FDtime);     
   66   4              } 
   67   3            }
   68   2                FMflag=17;
   69   2            if(FDtime==0){ g_write_value[23]|=0x40;}
   70   2            else{ g_write_value[23]&=~0x40; }
   71   2            
   72   2          break;
   73   2          case 1:      
   74   2            if((FOflag==0) && (FCflag==0))
   75   2            {
   76   3                      while(FDtime>0)
   77   3              { 
   78   4                FClose; 
   79   4                ShowClose(FDtime);  
   80   4              }
   81   3                }  
   82   2            else
   83   2            {
   84   3              while((FCflag) && FDtime>0)//  
   85   3              { 
   86   4                FClose; 
   87   4                ShowClose(FDtime); 
   88   4              } 
   89   3            }
   90   2            FMflag=18;
   91   2            if(FDtime==0){ g_write_value[23]|=0x20;}
   92   2            else{ g_write_value[23]&=~0x20; }
   93   2          break;
   94   2        }
   95   1        P1_DIR &=~(BIT3+BIT4);
   96   1        P1 &=~(BIT3+BIT4);Delay(5);
   97   1        FStop;Delay(5);
   98   1        P1 &=~(BIT0+BIT5);Delay(5);
   99   1        LCD_Clear(0X00);
  100   1        if((g_write_value[23]|0x1F)!=0x1F){ LCDRAM13 |=0x01; }
  101   1        else{  LCDRAM13 &=~0x01; }
  102   1        if((g_write_value[23]|0x9F)!=0x9F){ LCDRAM12 |=0x10; g_write_value[22]|=0x03; }
  103   1        else 
  104   1        { 
  105   2        LCDRAM12 &=~0x10; 
  106   2        if(FMflag==17){ g_write_value[22]&=~0x03;  }
  107   2        else if( FMflag==18 ){ g_write_value[22]&=~0x02;g_write_value[22]|=0x01; } 
  108   2        }  
  109   1      }
  110          /*******************************************************************************
  111          * 函  数  名      : calculate
  112          * 描      述      : 数据计算，后显示
  113          * 输      入      : 无
  114          * 返      回      : 无.
  115          *******************************************************************************/
  116          void calculate(void)
  117          {
  118   1              
  119   1       if(pul_flag==1)
  120   1          {
  121   2            pul_flag=0;                                                
  122   2            consumed_water++; 
  123   2            g_write_value[9]=(uint8_t)(consumed_water/65536);
C251 COMPILER V5.04b,  Calculate                                                           25/08/18  14:15:50  PAGE 3   

  124   2            g_write_value[8]=(uint8_t)(consumed_water/256%256);
  125   2            g_write_value[7]=(uint8_t)(consumed_water%256);
  126   2            showIP=0;
  127   2            Show();
  128   2          }
  129   1      }
  130          /*******************************************************************************
  131          * 函  数  名      : RNG_Time
  132          * 描      述      : 产生随机时间
  133          * 输      入      : 无
  134          * 返      回      : 无.
  135          设置的上报时间后两个小时内随机
  136          *******************************************************************************/
  137          void RNG_Time(void)
  138          {
  139   1      unsigned char tmpReg;
  140   1      unsigned char rngdata;
  141   1      unsigned char time_temp,time_hour,time_min;
  142   1              time_min=(g_write_value[36]/16)*10+g_write_value[36]%16;
  143   1              time_hour=(g_write_value[35]/16)*10+g_write_value[35]%16;
  144   1               //1. Enable the RNG power
  145   1          tmpReg = RNGCtrlReg;
  146   1          RNGCtrlReg = tmpReg | RNGCTRLPWRON;
  147   1          //2. Set the mode
  148   1          RNGModeReg = (RNGMODECNT0 << RNGMODECNTOFFSERT)     // 
  149   1                         | (RNGMODEXORON << RNGMODEFDBKOFFSERT)       //
  150   1                                 | (RNGMODELOADNEW << RNGMODELOADOFFSERT);
  151   1          tmpReg = RNGCtrlReg;
  152   1          //3. Generate the RNG data
  153   1          RNGCtrlReg = tmpReg | RNGCTRLRUN;
  154   1          //4. Read the RNG data
  155   1          while(0 != (RNGCtrlReg & RNGCTRLRUN))
  156   1          {
  157   2          }
  158   1          rngdata = RNGData0Reg3;
  159   1          /*rngdata[2] = RNGData0Reg2;
  160   1          rngdata[3] = RNGData0Reg3;
  161   1          rngdata[4] = RNGData1Reg0;
  162   1          rngdata[5] = RNGData1Reg1;
  163   1          rngdata[6] = RNGData1Reg2;
  164   1          rngdata[7] = RNGData1Reg3;*/
  165   1          //5. Disable the RNG
  166   1          RNGCtrlReg = 0x00;
  167   1              time_temp=(rngdata*15)/32;
  168   1              time_min=time_min+time_temp;
  169   1              time_min=time_temp%60;
  170   1              time_hour=time_hour+time_temp/60;
  171   1              if(time_hour>23)time_hour=time_hour-24;;
  172   1              g_write_value[36]=(time_min/10)*16+time_min%10;
  173   1              g_write_value[35]=(time_hour/10)*16+time_hour%10;
  174   1      
  175   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       777     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
C251 COMPILER V5.04b,  Calculate                                                           25/08/18  14:15:50  PAGE 4   

  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
